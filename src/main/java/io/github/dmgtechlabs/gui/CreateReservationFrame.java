/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package io.github.dmgtechlabs.gui;

import io.github.dmgtechlabs.models.Customer;
import io.github.dmgtechlabs.models.Reservation;
import io.github.dmgtechlabs.models.Room;
import java.awt.Component;
import java.awt.FlowLayout;
import java.math.BigInteger;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import org.jdesktop.swingx.JXDatePicker;

/**
 *
 * @author thanasis
 */
public class CreateReservationFrame extends javax.swing.JFrame {

	private static final String EMAIL_REGEX = "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$";
	public static final Pattern EMAIL_PATTERN = Pattern.compile(EMAIL_REGEX);
	private static final Pattern PHONE_PATTERN = Pattern.compile("-?\\d+(\\.\\d+)?");

	private JXDatePicker checkInPicker;
	private JXDatePicker checkOutPicker;

	private List<Room> rooms;

	/**
	 * Creates new form ReservationFrame
	 *
	 * @param activeHotelfk
	 */
	public CreateReservationFrame(int activeHotelfk) {
		initComponents();
		GUIUtils.commonSetup(null, this);
		this.setLayout(null);
		this.setResizable(false);

		initDatePanel();

		this.emailFormattedTextField.setInputVerifier(new EmailVerifier());

		this.rooms = Room.selectByOccupiedAndHotelId(activeHotelfk);
		for (Room r : this.rooms) {
			this.roomComboBox.addItem(r.UIString());
		}
	}

	private void initDatePanel() {
		this.datePanel = new JPanel(null);
		this.datePanel.setBounds(5, 50, 475, 100);

		this.checkInPicker = new JXDatePicker();
		this.checkInPicker.setDate(Calendar.getInstance().getTime());
		this.checkInPicker.setFormats(new SimpleDateFormat("yyyy.MM.dd"));
		this.checkInPicker.setBounds(5, 50, 200, 30);

		this.checkOutPicker = new JXDatePicker();
		this.checkOutPicker.setDate(Calendar.getInstance().getTime());
		this.checkOutPicker.setFormats(new SimpleDateFormat("yyyy.MM.dd"));
		this.checkOutPicker.setBounds(260, 50, 200, 30);

		this.datePanel.add(this.checkInPicker);
		this.datePanel.add(this.checkOutPicker);

		SwingUtilities.invokeLater(() -> {
			this.datePanel.revalidate();
			this.datePanel.repaint();
			this.add(this.datePanel);
		});
	}

	public CreateReservationFrame() {
		initComponents();
		GUIUtils.commonSetup(null, this);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        reservationPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        roomLabel = new javax.swing.JLabel();
        roomComboBox = new javax.swing.JComboBox<>();
        okBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        datePanel = new javax.swing.JPanel();
        checkInLabel = new javax.swing.JLabel();
        checkOutLabel = new javax.swing.JLabel();
        personalInfoLabel = new javax.swing.JLabel();
        fNameIndicator = new javax.swing.JLabel();
        fNameTextField = new javax.swing.JTextField();
        lnameTextField = new javax.swing.JTextField();
        emailFormattedTextField = new javax.swing.JFormattedTextField();
        lnameIndicator = new javax.swing.JLabel();
        emailIndicator = new javax.swing.JLabel();
        phoneIndicator = new javax.swing.JLabel();
        phoneTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("URW Gothic", 0, 30)); // NOI18N
        jLabel1.setText("Reservation Creation");

        roomLabel.setText("Select room");

        okBtn.setText("OK");
        okBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        checkInLabel.setText("Select a check-In date");

        checkOutLabel.setText("Select a check-out date");

        javax.swing.GroupLayout datePanelLayout = new javax.swing.GroupLayout(datePanel);
        datePanel.setLayout(datePanelLayout);
        datePanelLayout.setHorizontalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datePanelLayout.createSequentialGroup()
                .addComponent(checkInLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(checkOutLabel)
                .addGap(62, 62, 62))
        );
        datePanelLayout.setVerticalGroup(
            datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datePanelLayout.createSequentialGroup()
                .addGroup(datePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(checkInLabel)
                    .addComponent(checkOutLabel))
                .addContainerGap(62, Short.MAX_VALUE))
        );

        personalInfoLabel.setFont(new java.awt.Font("URW Gothic", 0, 24)); // NOI18N
        personalInfoLabel.setText("Personal information");

        fNameIndicator.setText("First name");

        lnameIndicator.setText("Last name");

        emailIndicator.setText("Email");

        phoneIndicator.setText("Phone");

        javax.swing.GroupLayout reservationPanelLayout = new javax.swing.GroupLayout(reservationPanel);
        reservationPanel.setLayout(reservationPanelLayout);
        reservationPanelLayout.setHorizontalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(datePanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(reservationPanelLayout.createSequentialGroup()
                        .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roomLabel)
                            .addComponent(jLabel1)
                            .addComponent(roomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(personalInfoLabel)
                            .addGroup(reservationPanelLayout.createSequentialGroup()
                                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lnameIndicator)
                                    .addComponent(fNameIndicator)
                                    .addComponent(phoneIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailIndicator, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(fNameTextField)
                                    .addComponent(lnameTextField)
                                    .addComponent(emailFormattedTextField)
                                    .addComponent(phoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))))
                        .addGap(0, 35, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, reservationPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(okBtn)
                .addGap(12, 12, 12))
        );
        reservationPanelLayout.setVerticalGroup(
            reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(reservationPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(roomLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(personalInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fNameIndicator)
                    .addComponent(fNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lnameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lnameIndicator))
                .addGap(18, 18, 18)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailIndicator))
                .addGap(18, 18, 18)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneIndicator)
                    .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(reservationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okBtn)
                    .addComponent(cancelBtn))
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reservationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(reservationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private boolean isEmailValid() {
		String email = this.emailFormattedTextField.getText();
		if (email.isBlank()) {
			return false;
		}

		Matcher matcher = EMAIL_PATTERN.matcher(email);
		return matcher.matches();
	}

	public int validatePhone(String phone) {
		Integer integerValue;

		try {
			integerValue = Integer.valueOf(phone);
		} catch (NumberFormatException e) {
			return -1;
		}

		return integerValue;
	}
	
//	private int validateServiceInfo() {
//		
//	}

	private int validatePersonalInfo(String fname, String lname, String email, String phone) {

		if (fname.isBlank()) {
			GUIUtils.logUserError(this, "Provide First Name");
			return -1;
		}

		if (lname.isBlank()) {
			GUIUtils.logUserError(this, "Provide Last Name");
			return -1;
		}

		if (email.isBlank()) {
			GUIUtils.logUserError(this, "Provide email");
			return -1;
		}

		if (!isEmailValid()) {
			GUIUtils.logUserError(this, "Invalid email");
			return -1;
		}

		if (phone.isBlank()) {
			GUIUtils.logUserError(this, "Provide phone number");
		}
		
		return 1;

	}

	private boolean customerExists() {
		return Customer.checkCustomer(this.emailFormattedTextField.getText());
	}

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
		this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okBtnActionPerformed
		String fname = this.fNameTextField.getText();
		String lname = this.lnameTextField.getText();
		String email = this.emailFormattedTextField.getText();
		String phone = this.phoneTextField.getText();
		Integer integerValue = validatePhone(phone);
		BigInteger phoneNum;

		if (validatePersonalInfo(fname, lname, email, phone) < 0) {
			return;
		}

		if (integerValue < 0) {
			GUIUtils.logUserError(this, "Invalid phone number");
			return;
		}
		
		phoneNum = BigInteger.valueOf(integerValue);

		if (customerExists()) {
			System.out.println("Customer exists");
//			Customer.selectByEmail(email).getFirst().update(fname, lname, phoneNum, email);
			return;
		}

		System.out.println("Customer does not exists");

//		new Customer(fname, lname, phoneNum, email).insert();
//		this.dispose();
    }//GEN-LAST:event_okBtnActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(CreateReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(CreateReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(CreateReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(CreateReservationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new CreateReservationFrame().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel checkInLabel;
    private javax.swing.JLabel checkOutLabel;
    private javax.swing.JPanel datePanel;
    private javax.swing.JFormattedTextField emailFormattedTextField;
    private javax.swing.JLabel emailIndicator;
    private javax.swing.JLabel fNameIndicator;
    private javax.swing.JTextField fNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lnameIndicator;
    private javax.swing.JTextField lnameTextField;
    private javax.swing.JButton okBtn;
    private javax.swing.JLabel personalInfoLabel;
    private javax.swing.JLabel phoneIndicator;
    private javax.swing.JTextField phoneTextField;
    private javax.swing.JPanel reservationPanel;
    private javax.swing.JComboBox<String> roomComboBox;
    private javax.swing.JLabel roomLabel;
    // End of variables declaration//GEN-END:variables
}
